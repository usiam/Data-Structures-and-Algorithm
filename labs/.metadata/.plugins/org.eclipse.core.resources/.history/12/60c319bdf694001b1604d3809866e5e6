import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

// Import any package as required

public class HuffmanSubmit implements Huffman {

	private static final int NUM_ASCII = 256;
		
	public static class Node implements Comparable<Node> {

		public Character c;
		public int weight; //the higher the frequency the higher the weight
		public Node left;
		public Node right;

		// constructor
		public Node(Character c, int weight, Node left, Node right) {
			//setting the class variables to have the values the object is instantiated with 
			this.c = c;
			this.weight = weight;
			this.left = left;
			this.right = right;
		}

		@Override
		public int compareTo(Node node) {
			return this.weight - node.weight;
		}
		
		public boolean isLeaf() {
			return left == null && right == null;
		}
		
		public String toString() {
			return "Character: " + c + ", Frequency: " + weight;
		}

	}

	// Feel free to add more methods and variables as required.

	public void encode(String inputFile, String outputFile, String freqFile) {
		
		int[] freqArr = new int[NUM_ASCII];
		
		BinaryIn binaryIn = new BinaryIn(inputFile);
		
		while (!binaryIn.isEmpty()) {
			char c = binaryIn.readChar();
			freqArr[c]++;
		}
		
		writeFreqFile(freqFile, freqArr);

	}

	public void decode(String inputFile, String outputFile, String freqFile) {
		// TODO: Your code here
	}
	
	public void writeFreqFile(String freqFile, int[] freqArr) {
		BufferedWriter bw = null;
		
		try {
			
			File file = new File(freqFile);
			if (!file.exists()) {
				file.createNewFile();
			}

			FileWriter fw = new FileWriter(file);
			bw = new BufferedWriter(fw);

			for (int i = 0; i < freqArr.length; i++) {
				if(freqArr[i] > 0) {
					String mycontent = getAsciiCode((char)i) + ": " + Integer.toString(freqArr[i]);
					if (i != freqArr.length - 1) {
						bw.write(mycontent + "\n");
					} else {
						bw.write(mycontent);
					}
				}
			
			}
		} catch (IOException ioe) {
			ioe.printStackTrace();
			System.out.println("Frequency file could not be written.");
		}
	}
	
//gets ASCII code of a given character and if the length of the code isnt 8 just slaps on a 0 in the front
	public String getAsciiCode(char c) {
		String asciiCode = Integer.toBinaryString(c);
		while(asciiCode.length() != 8) {
			asciiCode = "0" + asciiCode;
		}
		return asciiCode;
	}
	
	public static void main(String[] args) {
		Huffman huffman = new HuffmanSubmit();
		huffman.encode("ur.jpg", "ur.enc", "freq.txt");
		huffman.decode("ur.enc", "ur_dec.jpg", "freq.txt");
		huffman.encode("test.txt", "testENC.txt", "testFreqFILE");
		// After decoding, both ur.jpg and ur_dec.jpg should be the same.
		// On linux and mac, you can use `diff' command to check if they are the same.
	}

}
